WITH TRAIN_TRANSACTIONS AS
  (SELECT *
   FROM CFDS_SANDBOX.PUBLIC.RETAIL_TRANSACTIONS
   WHERE INVOICE_DATE <= '2011-06-01' ),
     TRAIN_AGGS AS
  (WITH BASIC_AGGS AS
     (SELECT CUSTOMERID,
             MAX(INVOICE_DATE) AS INVOICE_DATE_MAX,
             MIN(INVOICE_DATE) AS INVOICE_DATE_MIN,
             COUNT(DISTINCT INVOICE_NO) AS INVOICE_NO_COUNTDISTINCT,
             SUM(PURCHASE_AMT) AS PURCHASE_AMT_SUM
      FROM TRAIN_TRANSACTIONS
      GROUP BY CUSTOMERID) SELECT BASIC_AGGS.CUSTOMERID,
                                  BASIC_AGGS.INVOICE_DATE_MAX,
                                  BASIC_AGGS.INVOICE_DATE_MIN,
                                  BASIC_AGGS.INVOICE_NO_COUNTDISTINCT,
                                  BASIC_AGGS.PURCHASE_AMT_SUM
   FROM BASIC_AGGS),
     TRAIN_AGGS_WITH_DATE AS
  (SELECT *,
          '2011-06-01' AS TRAIN_PERIOD_END
   FROM TRAIN_AGGS),
     TRAIN_TENURE AS
  (SELECT *,
          DATEDIFF(DAY, INVOICE_DATE_MIN, TRAIN_PERIOD_END) AS DIFF_INVOICE_DATE_MIN_TRAIN_PERIOD_END
   FROM TRAIN_AGGS_WITH_DATE),
     TRAIN_RECENCY AS
  (SELECT *,
          DATEDIFF(DAY, INVOICE_DATE_MAX, TRAIN_PERIOD_END) AS DIFF_INVOICE_DATE_MAX_TRAIN_PERIOD_END
   FROM TRAIN_TENURE),
     TRAIN_RFM AS
  (SELECT DIFF_INVOICE_DATE_MAX_TRAIN_PERIOD_END AS RECENCY,
          DIFF_INVOICE_DATE_MIN_TRAIN_PERIOD_END AS T,
          INVOICE_NO_COUNTDISTINCT AS FREQUENCY,
          PURCHASE_AMT_SUM AS MONETARY,
          TRAIN_PERIOD_END,
          INVOICE_DATE_MAX,
          CUSTOMERID,
          INVOICE_DATE_MIN
   FROM TRAIN_RECENCY),
     HOLDOUT_TRANSACTIONS AS
  (SELECT *
   FROM CFDS_SANDBOX.PUBLIC.RETAIL_TRANSACTIONS
   WHERE INVOICE_DATE >= '2011-06-01'
     AND INVOICE_DATE <= '2011-12-31' ),
     HOLDOUT_AGGS AS
  (WITH BASIC_AGGS AS
     (SELECT CUSTOMERID,
             MAX(INVOICE_DATE) AS INVOICE_DATE_MAX,
             MIN(INVOICE_DATE) AS INVOICE_DATE_MIN,
             COUNT(DISTINCT INVOICE_NO) AS INVOICE_NO_COUNTDISTINCT,
             SUM(PURCHASE_AMT) AS PURCHASE_AMT_SUM
      FROM HOLDOUT_TRANSACTIONS
      GROUP BY CUSTOMERID) SELECT BASIC_AGGS.CUSTOMERID,
                                  BASIC_AGGS.INVOICE_DATE_MAX,
                                  BASIC_AGGS.INVOICE_DATE_MIN,
                                  BASIC_AGGS.INVOICE_NO_COUNTDISTINCT,
                                  BASIC_AGGS.PURCHASE_AMT_SUM
   FROM BASIC_AGGS),
     HOLDOUT_AGGS_WITH_DATE AS
  (SELECT *,
          '2011-12-31' AS OBS_PERIOD_END
   FROM HOLDOUT_AGGS),
     HOLDOUT_TENURE AS
  (SELECT *,
          DATEDIFF(DAY, INVOICE_DATE_MAX, OBS_PERIOD_END) AS DIFF_INVOICE_DATE_MAX_OBS_PERIOD_END
   FROM HOLDOUT_AGGS_WITH_DATE),
     HOLDOUT_RECENCY AS
  (SELECT *,
          DATEDIFF(DAY, INVOICE_DATE_MIN, OBS_PERIOD_END) AS DIFF_INVOICE_DATE_MIN_OBS_PERIOD_END
   FROM HOLDOUT_TENURE),
     HOLDOUT_RFM AS
  (SELECT DIFF_INVOICE_DATE_MAX_OBS_PERIOD_END AS RECENCY_HOLDOUT,
          DIFF_INVOICE_DATE_MIN_OBS_PERIOD_END AS T_HOLDOUT,
          INVOICE_NO_COUNTDISTINCT AS FREQUENCY_HOLDOUT,
          PURCHASE_AMT_SUM AS MONETARY_HOLDOUT,
          OBS_PERIOD_END,
          INVOICE_DATE_MAX,
          CUSTOMERID,
          INVOICE_DATE_MIN
   FROM HOLDOUT_RECENCY),
     HOLDOUT_RFM_F AS
  (SELECT CUSTOMERID,
          OBS_PERIOD_END,
          FREQUENCY_HOLDOUT
   FROM HOLDOUT_RFM),
     RFM_COMBINED AS
  (SELECT t1.TRAIN_PERIOD_END,
          t1.FREQUENCY,
          t1.INVOICE_DATE_MAX,
          t1.CUSTOMERID,
          t1.INVOICE_DATE_MIN,
          t1.MONETARY,
          t1.T,
          t1.RECENCY,
          t2.OBS_PERIOD_END,
          t2.FREQUENCY_HOLDOUT
   FROM TRAIN_RFM AS t1
   LEFT JOIN HOLDOUT_RFM_F AS t2 ON t1.CUSTOMERID = t2.CUSTOMERID),
     RFM_COMBINED_CLEAN AS
  (SELECT TRAIN_PERIOD_END,
          RECENCY,
          INVOICE_DATE_MIN,
          COALESCE(FREQUENCY_HOLDOUT, 0) AS FREQUENCY_HOLDOUT,
          MONETARY,
          FREQUENCY,
          T,
          CUSTOMERID,
          INVOICE_DATE_MAX,
          COALESCE(OBS_PERIOD_END, MODE(OBS_PERIOD_END) OVER ()) AS OBS_PERIOD_END
   FROM RFM_COMBINED)
SELECT CUSTOMERID,
       TRAIN_PERIOD_END,
       OBS_PERIOD_END,
       RECENCY,
       FREQUENCY,
       MONETARY,
       T,
       FREQUENCY_HOLDOUT
FROM RFM_COMBINED_CLEAN
